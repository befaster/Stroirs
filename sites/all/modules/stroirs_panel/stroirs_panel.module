<?php

function stroirs_panel_init() {
    drupal_add_js(drupal_get_path('module', 'stroirs_panel') . '/js/jquery.slidePanel.js');
    drupal_add_js(drupal_get_path('module', 'stroirs_panel') . '/js/stroirs_panel.js');
    drupal_add_css(drupal_get_path('module', 'stroirs_panel') . '/css/stroirs_panel.css', array('group' => CSS_THEME, 'preprocess' => FALSE));
}

/**
 * Implements of hook_menu()
 */
/*
  function stroirs_panel_menu() {
  $items = array();

  $items['stroirs_panel/panel'] = array(
  'page callback' => 'drupal_get_form',
  'page arguments' => array('_stroirs_panel_form'),
  'access arguments' => array('access content'),
  'type' => MENU_CALLBACK,
  );

  return $items;
  } */

/**
 * Implementation of hook_theme()
 */
function stroirs_panel_theme() {
    $path = drupal_get_path('module', 'stroirs_panel') . '/templates';

    return array(
        'stroirs_panel_main_block_theme' => array(
            'arguments' => array(),
            'template' => 'stroirs_panel_main_block',
            'path' => $path,
        ),
    );
}

/**
 * Implements hook_block_info().
 */
function stroirs_panel_block_info() {
    $blocks['stroirs_panel_main_panel'] = array(
        'info' => t('Stroirs Main Panel'),
        'cache' => DRUPAL_NO_CACHE
    );

    return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * Prepares the contents of the block.
 */
function stroirs_panel_block_view($delta = '') {
    $block = array();
    switch ($delta) {
        case 'stroirs_panel_main_panel':
            $form = drupal_get_form('stroirs_panel_form');
            $block['subject'] = t('Stroirs Main Panel');
            $block['content'] = theme('stroirs_panel_main_block_theme', array('form' => $form));
            break;
        default:
            break;
    }
    return $block;
}

function stroirs_panel_form_ajax_callback($form, $form_state) {
    return $form;
}

function stroirs_panel_form($form, &$form_state) {

    $form['#prefix'] = '<div id="stroirs-panel-form-wrapper">';
    $form['#suffix'] = '</div>';

    $form['#tree'] = TRUE;

    $step = empty($form_state['storage']['step']) ? 1 : $form_state['storage']['step'];
    $form_state['storage']['step'] = $step;

    $stroimaterial_vocabulary = taxonomy_vocabulary_machine_name_load('stoimaterial');

    if (!empty($stroimaterial_vocabulary->vid)) {
        $stroimaterial_details = taxonomy_get_tree($stroimaterial_vocabulary->vid);
        
        if (!empty($stroimaterial_details) && count($stroimaterial_details)) {
            $names = array();
            foreach ($stroimaterial_details as $material) {
                $names[] = $material->name;
            }
        } else {
            return;
        }
    } else {
        return;
    }

    switch ($step) {
        case 1:
            $form['step1'] = array(
                '#type' => 'fieldset',
                '#title' => 'Шаг 1. Выбор строиматериала',
            );

            $form['step1']['name'] = array(
                '#type' => 'radios',
                '#title' => 'Выберите что перевозить',
                '#options' => drupal_map_assoc($names),                
            );

            if (isset($form_state['values']['step1']['name'])) {
                $form['step1']['name']['#default_value'] = $form_state['values']['step1']['name'];
            }
            break;
        case 2:

            $form['step2'] = array(
                '#type' => 'fieldset',
                '#title' => t('Шаг второй. Предпочтения.'),
            );

            $default_value = empty($form_state['values']['step2']['module']) ? '' : $form_state['values']['step2']['module'];
            $form['step2']['module'] = array(
                '#type' => 'textfield',
                '#title' => 'Укажите ваш любимый модуль в Друпале',
                '#default_value' => $default_value,
                '#required' => TRUE,
            );

            $default_value = empty($form_state['values']['step2']['blog']) ? '' : $form_state['values']['step2']['blog'];
            $form['step2']['blog'] = array(
                '#type' => 'textfield',
                '#title' => 'Введите адрес любимого блога о Друпале',
                '#default_value' => $default_value,
                '#field_prefix' => 'http://',
                '#description' => 'Правильный ответ: drupalace.ru',
            );

            break;

        case 3:
            $form['step3'] = array(
                '#type' => 'fieldset',
                '#title' => 'Шаг третий. Восторг.',
            );

            $form['step3']['drupal'] = array(
                '#type' => 'checkboxes',
                '#title' => 'А вы уже успели оценить всю мощь Друпала?',
                '#options' => drupal_map_assoc(array('Да', 'Да, конечно', 'Да, и я в восторге', 'Да, и это прекрасно', 'В процессе')),
                '#required' => TRUE,
            );
            if (isset($form_state['values']['step3']['drupal'])) {
                $form['step3']['drupal']['#default_value'] = $form_state['values']['step3']['drupal'];
            }

            break;
    }

    $form['actions'] = array('#type' => 'actions');

    if ($step == 3) {
        $form['actions']['submit'] = array(
            '#type' => 'submit',
            '#value' => 'Хватит',
        );
    }


    if ($step < 3) {
        $form['actions']['next'] = array(
            '#type' => 'submit',
            '#value' => 'Следующий шаг',
            '#ajax' => array(
                'wrapper' => 'stroirs-panel-form-wrapper',
                'callback' => 'stroirs_panel_form_ajax_callback',
            ),
        );
    }

    if ($step > 1) {
        $form['actions']['prev'] = array(
            '#type' => 'submit',
            '#value' => 'Предыдущий шаг',
            '#limit_validation_errors' => array(),
            '#submit' => array('stroirs_panel_form_submit'),
            '#ajax' => array(
                'wrapper' => 'stroirs-panel-form-wrapper',
                'callback' => 'stroirs_panel_form_ajax_callback',
            ),
        );
    }

    return $form;
}

function stroirs_panel_form_submit($form, &$form_state) {
    $current_step = 'step' . $form_state['storage']['step'];
    if (!empty($form_state['values'][$current_step])) {
        $form_state['storage']['values'][$current_step] = $form_state['values'][$current_step];
    }

    if (isset($form['actions']['next']['#value']) && $form_state['triggering_element']['#value'] == $form['actions']['next']['#value']) {
        $form_state['storage']['step']++;

        $step_name = 'step' . $form_state['storage']['step'];
        if (!empty($form_state['storage']['values'][$step_name])) {
            $form_state['values'][$step_name] = $form_state['storage']['values'][$step_name];
        }
    }


    if (isset($form['actions']['prev']['#value']) && $form_state['triggering_element']['#value'] == $form['actions']['prev']['#value']) {
        $form_state['storage']['step']--;

        $step_name = 'step' . $form_state['storage']['step'];
        $form_state['values'][$step_name] = $form_state['storage']['values'][$step_name];
    }

    if (isset($form['actions']['submit']['#value']) && $form_state['triggering_element']['#value'] == $form['actions']['submit']['#value']) {

        $message = 'Введённые данные: <br/>';
        foreach ($form_state['storage']['values'] as $step => $values) {
            $message .= "<br/>$step: <br/>";
            foreach ($values as $key => $value) {
                $output = '';
                if (is_array($value)) {
                    foreach ($value as $val) {
                        $output .= $val ? $val . '; ' : '';
                    }
                    $value = implode(', ', $value);
                } else {
                    $output = $value;
                }
                $message .= "$key = $output<br/>";
            }
        }
        drupal_set_message($message);
        $form_state['rebuild'] = FALSE;
        return;
    }

    $form_state['rebuild'] = TRUE;
}

